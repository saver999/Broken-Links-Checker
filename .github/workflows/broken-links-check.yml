name: Broken Links Checker
on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 1 * *'
env:
  ISSUE_TEMPLATE: ".github/workflows/ISSUE_TEMPLATE.md"

  contents: read
  issues: write

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Get links from README.md
        id: get-links
        run: |
          LINKS=$(sed -nE 's/\[.*\]\((http[s]?:\/\/[^)]*)\)/\1/p' README.md | paste -sd ,)
          echo "WEBSITE_URL=$LINKS" >> $GITHUB_ENV

      - name: Run Broken Links Checker
        run: |
          # Split the list of links into an array separated by commas
          IFS=',' read -ra LINKS <<< "$WEBSITE_URL"
          BROKEN_LINKS=()
          
          # Scan the links and verify if they are reachable
          for link in "${LINKS[@]}"; do
              if ! curl -IsSk "$link" > /dev/null; then
                BROKEN_LINKS+=("$link")
              fi
            fi
          done
          
          if [ ${#BROKEN_LINKS[@]} -gt 0 ]; then
           echo "Broken links found: ${BROKEN_LINKS[@]}" >&2
           echo "Broken links found, failing the workflow" >&2
           exit 1
          else
           echo "No broken links found"
          fi

      - name: Read issue template file
        id: read-template
        run: |
          ISSUE_TEMPLATE=$(cat ${{ env.ISSUE_TEMPLATE_PATH }})
          echo "ISSUE_TEMPLATE=$ISSUE_TEMPLATE" >> $GITHUB_ENV

      - name: Create or Update an issue for broken links
        run: |
          ISSUE_BODY=$(echo "$ISSUE_TEMPLATE" | sed 's/{{BROKEN_LINKS}}/'"$BROKEN_LINKS"'/g')
          ISSUE_TITLE="Broken Links Found"
          ISSUE_NUMBER=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
           "https://api.github.com/repos/${{ github.repository }}/issues?state=open" | \
            jq -r --arg TITLE "$ISSUE_TITLE" '.[] | select(.title == $TITLE) | .number')
                
          if [ -z "$ISSUE_NUMBER" ]; then
            echo "Creating a new issue..."
            curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"title":"'"$ISSUE_TITLE"'","body":"'"$ISSUE_BODY"'"}' \
              "https://api.github.com/repos/${{ github.repository }}/issues"
          else
            echo "Updating existing issue #$ISSUE_NUMBER..."
            curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -d '{"body":"'"$ISSUE_BODY"'"}' \
               "https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUMBER"
          fi
        if: failure()
